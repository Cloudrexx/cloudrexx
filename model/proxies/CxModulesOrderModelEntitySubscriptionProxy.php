<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxModulesOrderModelEntitySubscriptionProxy extends \Cx\Modules\Order\Model\Entity\Subscription implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function setOrder(\Cx\Modules\Order\Model\Entity\Order $order, $updatePaymentAmount = false)
    {
        $this->_load();
        return parent::setOrder($order, $updatePaymentAmount);
    }

    public function getOrder()
    {
        $this->_load();
        return parent::getOrder();
    }

    public function setProduct($product)
    {
        $this->_load();
        return parent::setProduct($product);
    }

    public function getProduct()
    {
        $this->_load();
        return parent::getProduct();
    }

    public function getExpirationDate()
    {
        $this->_load();
        return parent::getExpirationDate();
    }

    public function setExpirationDate($expirationDate)
    {
        $this->_load();
        return parent::setExpirationDate($expirationDate);
    }

    public function getProductEntityId()
    {
        $this->_load();
        return parent::getProductEntityId();
    }

    public function setProductEntityId($productEntityId)
    {
        $this->_load();
        return parent::setProductEntityId($productEntityId);
    }

    public function getProductEntity()
    {
        $this->_load();
        return parent::getProductEntity();
    }

    public function setProductEntity($productEntity)
    {
        $this->_load();
        return parent::setProductEntity($productEntity);
    }

    public function getPaymentAmount()
    {
        $this->_load();
        return parent::getPaymentAmount();
    }

    public function setPaymentAmount($paymentAmount)
    {
        $this->_load();
        return parent::setPaymentAmount($paymentAmount);
    }

    public function getPaymentState()
    {
        $this->_load();
        return parent::getPaymentState();
    }

    public function setPaymentState($paymentState)
    {
        $this->_load();
        return parent::setPaymentState($paymentState);
    }

    public function getRenewalUnit()
    {
        $this->_load();
        return parent::getRenewalUnit();
    }

    public function setRenewalUnit($renewalUnit)
    {
        $this->_load();
        return parent::setRenewalUnit($renewalUnit);
    }

    public function getRenewalQuantifier()
    {
        $this->_load();
        return parent::getRenewalQuantifier();
    }

    public function setRenewalQuantifier($renewalQuantifier)
    {
        $this->_load();
        return parent::setRenewalQuantifier($renewalQuantifier);
    }

    public function getRenewalDate()
    {
        $this->_load();
        return parent::getRenewalDate();
    }

    public function setRenewalDate($renewalDate)
    {
        $this->_load();
        return parent::setRenewalDate($renewalDate);
    }

    public function getDescription()
    {
        $this->_load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->_load();
        return parent::setDescription($description);
    }

    public function getNote()
    {
        $this->_load();
        return parent::getNote();
    }

    public function setNote($note)
    {
        $this->_load();
        return parent::setNote($note);
    }

    public function getExternalSubscriptionId()
    {
        $this->_load();
        return parent::getExternalSubscriptionId();
    }

    public function setExternalSubscriptionId($externalSubscriptionId)
    {
        $this->_load();
        return parent::setExternalSubscriptionId($externalSubscriptionId);
    }

    public function payComplete()
    {
        $this->_load();
        return parent::payComplete();
    }

    public function getSubscriptionDate()
    {
        $this->_load();
        return parent::getSubscriptionDate();
    }

    public function setSubscriptionDate($subscriptionDate)
    {
        $this->_load();
        return parent::setSubscriptionDate($subscriptionDate);
    }

    public function getState()
    {
        $this->_load();
        return parent::getState();
    }

    public function setState($state)
    {
        $this->_load();
        return parent::setState($state);
    }

    public function getTerminationDate()
    {
        $this->_load();
        return parent::getTerminationDate();
    }

    public function setTerminationDate($terminationDate)
    {
        $this->_load();
        return parent::setTerminationDate($terminationDate);
    }

    public function terminate()
    {
        $this->_load();
        return parent::terminate();
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function getComponentController()
    {
        $this->_load();
        return parent::getComponentController();
    }

    public function setVirtual($virtual)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'subscriptionDate', 'expirationDate', 'productEntityId', 'paymentAmount', 'paymentState', 'renewalUnit', 'renewalQuantifier', 'renewalDate', 'externalSubscriptionId', 'description', 'state', 'terminationDate', 'note', 'order', 'product');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}