<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxCore_ModulesSyncModelEntityRelationProxy extends \Cx\Core_Modules\Sync\Model\Entity\Relation implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setLft($lft)
    {
        $this->_load();
        return parent::setLft($lft);
    }

    public function getLft()
    {
        $this->_load();
        return parent::getLft();
    }

    public function setRgt($rgt)
    {
        $this->_load();
        return parent::setRgt($rgt);
    }

    public function getRgt()
    {
        $this->_load();
        return parent::getRgt();
    }

    public function setLvl($lvl)
    {
        $this->_load();
        return parent::setLvl($lvl);
    }

    public function getLvl()
    {
        $this->_load();
        return parent::getLvl();
    }

    public function setLocalFieldName($localFieldName)
    {
        $this->_load();
        return parent::setLocalFieldName($localFieldName);
    }

    public function getLocalFieldName()
    {
        $this->_load();
        return parent::getLocalFieldName();
    }

    public function setDoSync($doSync)
    {
        $this->_load();
        return parent::setDoSync($doSync);
    }

    public function getDoSync()
    {
        $this->_load();
        return parent::getDoSync();
    }

    public function setDefaultEntityId($defaultEntityId)
    {
        $this->_load();
        return parent::setDefaultEntityId($defaultEntityId);
    }

    public function getDefaultEntityId()
    {
        $this->_load();
        return parent::getDefaultEntityId();
    }

    public function addChildren(\Cx\Core_Modules\Sync\Model\Entity\Relation $children)
    {
        $this->_load();
        return parent::addChildren($children);
    }

    public function setChildren($children)
    {
        $this->_load();
        return parent::setChildren($children);
    }

    public function getChildren()
    {
        $this->_load();
        return parent::getChildren();
    }

    public function setParent(\Cx\Core_Modules\Sync\Model\Entity\Relation $parent)
    {
        $this->_load();
        return parent::setParent($parent);
    }

    public function getParent()
    {
        $this->_load();
        return parent::getParent();
    }

    public function setRelatedSync(\Cx\Core_Modules\Sync\Model\Entity\Sync $relatedSync)
    {
        $this->_load();
        return parent::setRelatedSync($relatedSync);
    }

    public function getRelatedSync()
    {
        $this->_load();
        return parent::getRelatedSync();
    }

    public function setForeignDataAccess(\Cx\Core_Modules\DataAccess\Model\Entity\DataAccess $foreignDataAccess)
    {
        $this->_load();
        return parent::setForeignDataAccess($foreignDataAccess);
    }

    public function getForeignDataAccess()
    {
        $this->_load();
        return parent::getForeignDataAccess();
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function getComponentController()
    {
        $this->_load();
        return parent::getComponentController();
    }

    public function setVirtual($virtual)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'lft', 'rgt', 'lvl', 'localFieldName', 'doSync', 'defaultEntityId', 'children', 'parent', 'relatedSync', 'foreignDataAccess');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}