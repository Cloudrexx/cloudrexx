<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxCore_ModulesLinkManagerModelEntityCrawlerProxy extends \Cx\Core_Modules\LinkManager\Model\Entity\Crawler implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function getLang()
    {
        $this->_load();
        return parent::getLang();
    }

    public function setLang($lang)
    {
        $this->_load();
        return parent::setLang($lang);
    }

    public function getStartTime()
    {
        $this->_load();
        return parent::getStartTime();
    }

    public function updateStartTime()
    {
        $this->_load();
        return parent::updateStartTime();
    }

    public function setStartTime($startTime)
    {
        $this->_load();
        return parent::setStartTime($startTime);
    }

    public function getEndTime()
    {
        $this->_load();
        return parent::getEndTime();
    }

    public function updateEndTime()
    {
        $this->_load();
        return parent::updateEndTime();
    }

    public function setEndTime($endTime)
    {
        $this->_load();
        return parent::setEndTime($endTime);
    }

    public function getTotalLinks()
    {
        $this->_load();
        return parent::getTotalLinks();
    }

    public function setTotalLinks($totalLinks)
    {
        $this->_load();
        return parent::setTotalLinks($totalLinks);
    }

    public function getTotalBrokenLinks()
    {
        $this->_load();
        return parent::getTotalBrokenLinks();
    }

    public function setTotalBrokenLinks($totalBrokenLinks)
    {
        $this->_load();
        return parent::setTotalBrokenLinks($totalBrokenLinks);
    }

    public function getRunStatus()
    {
        $this->_load();
        return parent::getRunStatus();
    }

    public function setRunStatus($runStatus)
    {
        $this->_load();
        return parent::setRunStatus($runStatus);
    }

    public function updateFromArray($newData)
    {
        $this->_load();
        return parent::updateFromArray($newData);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'lang', 'startTime', 'endTime', 'totalLinks', 'totalBrokenLinks', 'runStatus');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}