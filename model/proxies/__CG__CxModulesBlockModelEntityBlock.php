<?php

namespace Cx\Model\Proxies\__CG__\Cx\Modules\Block\Model\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Block extends \Cx\Modules\Block\Model\Entity\Block implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }





    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'start', 'end', 'name', 'random', 'random2', 'random3', 'random4', 'showInCategory', 'showInGlobal', 'showInDirect', 'active', 'order', 'wysiwygEditor', 'relLangContents', 'relPages', 'targetingOptions', 'category', 'versionTargetingOption', 'versionRelLangContent', 'versionRelPageGlobal', 'versionRelPageCategory', 'versionRelPageDirect', 'validators', 'virtual');
        }

        return array('__isInitialized__', 'id', 'start', 'end', 'name', 'random', 'random2', 'random3', 'random4', 'showInCategory', 'showInGlobal', 'showInDirect', 'active', 'order', 'wysiwygEditor', 'relLangContents', 'relPages', 'targetingOptions', 'category', 'versionTargetingOption', 'versionRelLangContent', 'versionRelPageGlobal', 'versionRelPageCategory', 'versionRelPageDirect', 'validators', 'virtual');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Block $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStart($start)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStart', array($start));

        return parent::setStart($start);
    }

    /**
     * {@inheritDoc}
     */
    public function getStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStart', array());

        return parent::getStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnd($end)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnd', array($end));

        return parent::setEnd($end);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnd', array());

        return parent::getEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setRandom($random)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRandom', array($random));

        return parent::setRandom($random);
    }

    /**
     * {@inheritDoc}
     */
    public function getRandom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRandom', array());

        return parent::getRandom();
    }

    /**
     * {@inheritDoc}
     */
    public function setRandom2($random2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRandom2', array($random2));

        return parent::setRandom2($random2);
    }

    /**
     * {@inheritDoc}
     */
    public function getRandom2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRandom2', array());

        return parent::getRandom2();
    }

    /**
     * {@inheritDoc}
     */
    public function setRandom3($random3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRandom3', array($random3));

        return parent::setRandom3($random3);
    }

    /**
     * {@inheritDoc}
     */
    public function getRandom3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRandom3', array());

        return parent::getRandom3();
    }

    /**
     * {@inheritDoc}
     */
    public function setRandom4($random4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRandom4', array($random4));

        return parent::setRandom4($random4);
    }

    /**
     * {@inheritDoc}
     */
    public function getRandom4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRandom4', array());

        return parent::getRandom4();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowInCategory($showInCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowInCategory', array($showInCategory));

        return parent::setShowInCategory($showInCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowInCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowInCategory', array());

        return parent::getShowInCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowInGlobal($showInGlobal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowInGlobal', array($showInGlobal));

        return parent::setShowInGlobal($showInGlobal);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowInGlobal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowInGlobal', array());

        return parent::getShowInGlobal();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowInDirect($showInDirect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowInDirect', array($showInDirect));

        return parent::setShowInDirect($showInDirect);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowInDirect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowInDirect', array());

        return parent::getShowInDirect();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', array($order));

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', array());

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setWysiwygEditor($wysiwygEditor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWysiwygEditor', array($wysiwygEditor));

        return parent::setWysiwygEditor($wysiwygEditor);
    }

    /**
     * {@inheritDoc}
     */
    public function getWysiwygEditor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWysiwygEditor', array());

        return parent::getWysiwygEditor();
    }

    /**
     * {@inheritDoc}
     */
    public function addRelLangContent(\Cx\Modules\Block\Model\Entity\RelLangContent $relLangContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRelLangContent', array($relLangContent));

        return parent::addRelLangContent($relLangContent);
    }

    /**
     * {@inheritDoc}
     */
    public function setRelLangContents($relLangContents)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelLangContents', array($relLangContents));

        return parent::setRelLangContents($relLangContents);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelLangContents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelLangContents', array());

        return parent::getRelLangContents();
    }

    /**
     * {@inheritDoc}
     */
    public function addRelPage(\Cx\Modules\Block\Model\Entity\RelPage $relPage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRelPage', array($relPage));

        return parent::addRelPage($relPage);
    }

    /**
     * {@inheritDoc}
     */
    public function setRelPages($relPages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelPages', array($relPages));

        return parent::setRelPages($relPages);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelPages', array());

        return parent::getRelPages();
    }

    /**
     * {@inheritDoc}
     */
    public function addTargetingOption(\Cx\Modules\Block\Model\Entity\TargetingOption $targetingOption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTargetingOption', array($targetingOption));

        return parent::addTargetingOption($targetingOption);
    }

    /**
     * {@inheritDoc}
     */
    public function setTargetingOptions($targetingOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTargetingOptions', array($targetingOptions));

        return parent::setTargetingOptions($targetingOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getTargetingOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTargetingOptions', array());

        return parent::getTargetingOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersionTargetingOption($versionTargetingOption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersionTargetingOption', array($versionTargetingOption));

        return parent::setVersionTargetingOption($versionTargetingOption);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionTargetingOption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersionTargetingOption', array());

        return parent::getVersionTargetingOption();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersionRelLangContent($versionRelLangContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersionRelLangContent', array($versionRelLangContent));

        return parent::setVersionRelLangContent($versionRelLangContent);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionRelLangContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersionRelLangContent', array());

        return parent::getVersionRelLangContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersionRelPageGlobal($versionRelPageGlobal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersionRelPageGlobal', array($versionRelPageGlobal));

        return parent::setVersionRelPageGlobal($versionRelPageGlobal);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionRelPageGlobal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersionRelPageGlobal', array());

        return parent::getVersionRelPageGlobal();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersionRelPageCategory($versionRelPageCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersionRelPageCategory', array($versionRelPageCategory));

        return parent::setVersionRelPageCategory($versionRelPageCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionRelPageCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersionRelPageCategory', array());

        return parent::getVersionRelPageCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersionRelPageDirect($versionRelPageDirect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersionRelPageDirect', array($versionRelPageDirect));

        return parent::setVersionRelPageDirect($versionRelPageDirect);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionRelPageDirect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersionRelPageDirect', array());

        return parent::getVersionRelPageDirect();
    }

    /**
     * {@inheritDoc}
     */
    public function getContent($localeId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array($localeId));

        return parent::getContent($localeId);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidgetContentAttributeName($widgetName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidgetContentAttributeName', array($widgetName));

        return parent::getWidgetContentAttributeName($widgetName);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidgetContent($widgetName, $theme, $page, $channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidgetContent', array($widgetName, $theme, $page, $channel));

        return parent::getWidgetContent($widgetName, $theme, $page, $channel);
    }

    /**
     * {@inheritDoc}
     */
    public function getComponentController()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComponentController', array());

        return parent::getComponentController();
    }

    /**
     * {@inheritDoc}
     */
    public function setVirtual($virtual)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVirtual', array($virtual));

        return parent::setVirtual($virtual);
    }

    /**
     * {@inheritDoc}
     */
    public function isVirtual()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVirtual', array());

        return parent::isVirtual();
    }

    /**
     * {@inheritDoc}
     */
    public function validate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', array());

        return parent::validate();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($methodName, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($methodName, $arguments));

        return parent::__call($methodName, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
