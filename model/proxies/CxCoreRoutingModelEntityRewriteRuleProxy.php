<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxCoreRoutingModelEntityRewriteRuleProxy extends \Cx\Core\Routing\Model\Entity\RewriteRule implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function getRegularExpression()
    {
        $this->_load();
        return parent::getRegularExpression();
    }

    public function getOrderNo()
    {
        $this->_load();
        return parent::getOrderNo();
    }

    public function getRewriteStatusCode()
    {
        $this->_load();
        return parent::getRewriteStatusCode();
    }

    public function getContinueOnMatch()
    {
        $this->_load();
        return parent::getContinueOnMatch();
    }

    public function setRegularExpression($regularExpression)
    {
        $this->_load();
        return parent::setRegularExpression($regularExpression);
    }

    public function setOrderNo($orderNo)
    {
        $this->_load();
        return parent::setOrderNo($orderNo);
    }

    public function setRewriteStatusCode($rewriteStatusCode)
    {
        $this->_load();
        return parent::setRewriteStatusCode($rewriteStatusCode);
    }

    public function setContinueOnMatch($continueOnMatch)
    {
        $this->_load();
        return parent::setContinueOnMatch($continueOnMatch);
    }

    public function matches(\Cx\Core\Routing\Url $url)
    {
        $this->_load();
        return parent::matches($url);
    }

    public function resolve(\Cx\Core\Routing\Url $url, &$continue)
    {
        $this->_load();
        return parent::resolve($url, $continue);
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function getComponentController()
    {
        $this->_load();
        return parent::getComponentController();
    }

    public function setVirtual($virtual)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'regularExpression', 'orderNo', 'rewriteStatusCode', 'continueOnMatch');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}