<?php

namespace Cx\Modules\Shop\Model\Repository;

/**
 * PaymentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaymentRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Returns the countries related payment ID array.
     *
     * If PayPal is the selected payment method, any Currencies not supported
     * will be removed from the Currency array.
     * Returns the Payment IDs allowed for the given Country ID.
     * Note that the Payment IDs are used for both the keys and values
     * of the array returned, like:
     *  array(
     *    payment_id => payment_id,
     *    [...]
     *  )
     * @global  ADONewConnection  $objDatabase    Database connection object
     * @param    integer $countryId         The country ID
     * @param    array   $arrCurrencies     The currencies array, by reference
     * @return   array                      Array of Payment IDs
     */
    static function getCountriesRelatedPaymentIdArray($countryId, $arrCurrencies)
    {
        global $objDatabase;

        if (is_null(self::$arrPayments)) self::init();
        if (isset($_SESSION['shop']['paymentId'])) {
            $payment_id = $_SESSION['shop']['paymentId'];
            $processor_id = self::getPaymentProcessorId($payment_id);
            if ($processor_id == 2) {
                foreach ($arrCurrencies as $index => $arrCurrency) {
                    if (!\PayPal::isAcceptedCurrencyCode($arrCurrency['code'])) {
                        unset($arrCurrencies[$index]);
                    }
                }
            }
        }
        $arrPaymentId = array();
        $query = "
            SELECT DISTINCT `payment`.`id`
              FROM `".DBPREFIX."module_shop".MODULE_INDEX."_rel_countries` AS `country`
             INNER JOIN `".DBPREFIX."module_shop".MODULE_INDEX."_zones` AS `zone`
                ON `country`.`zone_id`=`zone`.`id`
             INNER JOIN `".DBPREFIX."module_shop".MODULE_INDEX."_rel_payment` AS `rel_payment`
                ON `zone`.`id`=`rel_payment`.`zone_id`
             INNER JOIN `".DBPREFIX."module_shop".MODULE_INDEX."_payment` AS `payment`
                ON `payment`.`id`=`rel_payment`.`payment_id`
             WHERE `country`.`country_id`=".intval($countryId)."
               AND `payment`.`active`=1
               AND `zone`.`active`=1";
        $objResult = $objDatabase->Execute($query);
        while ($objResult && !$objResult->EOF) {
            if (   isset(self::$arrPayments[$objResult->fields['id']])
                && (   self::$arrPayments[$objResult->fields['id']]['processor_id'] != 2
                    || count($arrCurrencies))
            ) {
                $paymentId = $objResult->fields['id'];
                // the processor with the id 3 is postfinance and 11 is postfinance mobile
                // if it is one of them, it should only be able to order when it is Switzerland
                if (
                    in_array(self::$arrPayments[$paymentId]['processor_id'], array(3, 11)) &&
                    \Cx\Core\Country\Controller\Country::getAlpha2ById($countryId) != 'CH'
                ) {
                    $objResult->MoveNext();
                    continue;
                }
                $arrPaymentId[$paymentId] = $paymentId;
            }
            $objResult->MoveNext();
        }
        return $arrPaymentId;
    }
}
